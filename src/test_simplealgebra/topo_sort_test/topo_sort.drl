

//$$strtCprt
//
// Simple Algebra 
// 
// Copyright (C) 2014 Thornton Green
// 
// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program; if not, 
// see <http://www.gnu.org/licenses>.
// Additional permission under GNU GPL version 3 section 7
//
//
//$$endCprt

package test_simplealgebra.topo_sort_test



import simplealgebra.symbolic.DroolsSession;
import test_simplealgebra.topo_sort_test.TopoSortNode;
import test_simplealgebra.topo_sort_test.TopoSortDependency;
import test_simplealgebra.topo_sort_test.TopoSortSession;
import test_simplealgebra.topo_sort_test.DependencyMark;






rule "Select Next Sort"
     when
          p : TopoSortNode( )
          not( TopoSortDependency( from == p ) )
          s : TopoSortSession()
          ds : DroolsSession()
     then
          // System.out.println( "Select Next Sort " + p );
          insert( new DependencyMark( s.handleNodeSelect( p ) ) );
end












rule "Apply Dependency Mark"
     when
          p0 : DependencyMark( )
          p1 : TopoSortNode( ) from p0.to
          p2 : TopoSortDependency( to == p1 )
          ds : DroolsSession()
     then
          // System.out.println( "Apply Dependency Mark " );
          p2.handleDependencyMark( ds );
end






